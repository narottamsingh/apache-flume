
# Define the Flume agent and its components
agent.sources = mySource
agent.sinks = myHttpSink
agent.channels = myChannel

# Define the source (e.g., read data from a file)
agent.sources.mySource.type = exec
agent.sources.mySource.command = powershell -Command Get-Content -Wait -Path C:\\software\\workspace\\test\\flume-demo\\app.log
agent.sources.mySource.channels = myChannel

# Define the HTTP sink
agent.sinks.myHttpSink.type = http
agent.sinks.myHttpSink.endpoint = http://localhost:8080/api/receive
agent.sinks.myHttpSink.channel = myChannel
agent.sinks.myHttpSink.requestMethod = POST
agent.sinks.myHttpSink.headers = Content-Type:application/json

# Define the channel
agent.channels.myChannel.type = memory
agent.channels.myChannel.capacity = 1000
agent.channels.myChannel.transactionCapacity = 100

# Bind the source and sink to the channel
agent.sources.mySource.channels = myChannel
agent.sinks.myHttpSink.channel = myChannel


docker run -e FLUME_AGENT_NAME=docker -e FLUME_CONF_FILE=/var/tmp/flume.conf -p 44444:44444 -t flume


# example.conf: A single-node Flume configuration

# Name the components on this agent
a1.sources = r1
a1.sinks = k1
a1.channels = c1

# Describe/configure the source
a1.sources.r1.type = netcat
a1.sources.r1.bind = 0.0.0.0
a1.sources.r1.port = 44444
# Define a custom interceptor (optional)
a1.sources.r1.interceptors = myCustomInterceptor
a1.sources.r1.interceptors.myCustomInterceptor.type = com.example.flume.interceptor.EmailInterceptor$Builder


# Describe the sink
a1.sinks.k1.type = logger

# Use a channel which buffers events in memory
a1.channels.c1.type = memory
a1.channels.c1.capacity = 1000
a1.channels.c1.transactionCapacity = 100

# Bind the source and sink to the channel
a1.sources.r1.channels = c1
a1.sinks.k1.channel = c1

-- run->  bin/flume-ng agent --conf conf --conf-file conf/flume.conf --name a1
	telnet localhost 44444

